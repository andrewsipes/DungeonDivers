// "Text.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "Text.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _Text_version_
const char Text_version[4] = { '0','1','9','d' };
#define _Text_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _Text_vertexcount_
const unsigned Text_vertexcount = 151;
#define _Text_vertexcount_
#endif
#ifndef _Text_indexcount_
const unsigned Text_indexcount = 423;
#define _Text_indexcount_
#endif
#ifndef _Text_materialcount_
const unsigned Text_materialcount = 1; // can be used for batched draws
#define _Text_materialcount_
#endif
#ifndef _Text_meshcount_
const unsigned Text_meshcount = 1;
#define _Text_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _Text_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT Text_vertices[151] =
{
	{	{ -2.060668f, 0.689539f, -0.000000f },	{ 0.107438f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.091000f, 0.691000f, -0.000000f },	{ 0.099174f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.103998f, 0.690667f, -0.000000f },	{ 0.090909f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.116982f, 0.689667f, -0.000000f },	{ 0.082645f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.129938f, 0.688000f, -0.000000f },	{ 0.074380f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.032264f, 0.685227f, -0.000000f },	{ 0.115702f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.142852f, 0.685667f, -0.000000f },	{ 0.066116f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.155711f, 0.682667f, -0.000000f },	{ 0.057851f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.005922f, 0.678172f, -0.000000f },	{ 0.123967f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.168500f, 0.679000f, -0.000000f },	{ 0.049587f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.181206f, 0.674667f, -0.000000f },	{ 0.041322f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.981778f, 0.668482f, -0.000000f },	{ 0.132231f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.193815f, 0.669667f, -0.000000f },	{ 0.033058f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.206313f, 0.664000f, -0.000000f },	{ 0.024793f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.959967f, 0.656263f, -0.000000f },	{ 0.140496f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.218685f, 0.657667f, -0.000000f },	{ 0.016529f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.230919f, 0.650667f, -0.000000f },	{ 0.008264f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.940625f, 0.641625f, -0.000000f },	{ 0.148760f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.243000f, 0.643000f, -0.000000f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.132037f, 0.596815f, -0.000000f },	{ 0.933884f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.145130f, 0.593003f, -0.000000f },	{ 0.942149f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.158500f, 0.588125f, -0.000000f },	{ 0.950413f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.172121f, 0.582101f, -0.000000f },	{ 0.958678f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.185963f, 0.574852f, -0.000000f },	{ 0.966942f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.200000f, 0.566297f, -0.000000f },	{ 0.975207f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.214204f, 0.556357f, -0.000000f },	{ 0.983471f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.228547f, 0.544951f, -0.000000f },	{ 0.991736f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.243000f, 0.532000f, -0.000000f },	{ 1.000000f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.923887f, 0.624674f, -0.000000f },	{ 0.157025f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.106797f, 0.601560f, -0.000000f },	{ 0.917355f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.119250f, 0.599641f, -0.000000f },	{ 0.925620f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.909889f, 0.605519f, -0.000000f },	{ 0.165289f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.083000f, 0.603000f, -0.000000f },	{ 0.900826f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.094704f, 0.602653f, -0.000000f },	{ 0.909091f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.898766f, 0.584266f, -0.000000f },	{ 0.173554f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.067641f, 0.602323f, -0.000000f },	{ 0.892562f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.053125f, 0.600333f, -0.000000f },	{ 0.884298f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.039547f, 0.597094f, -0.000000f },	{ 0.876033f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.027000f, 0.592667f, -0.000000f },	{ 0.867769f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.015578f, 0.587115f, -0.000000f },	{ 0.859504f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.005375f, 0.580500f, -0.000000f },	{ 0.851240f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.890653f, 0.561023f, -0.000000f },	{ 0.181818f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.996485f, 0.572885f, -0.000000f },	{ 0.842975f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.989000f, 0.564333f, -0.000000f },	{ 0.834711f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.983016f, 0.554906f, -0.000000f },	{ 0.826446f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.885686f, 0.535899f, -0.000000f },	{ 0.190083f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.978625f, 0.544667f, -0.000000f },	{ 0.818182f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.975922f, 0.533677f, -0.000000f },	{ 0.809917f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.884000f, 0.509000f, -0.000000f },	{ 0.198347f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.975000f, 0.522000f, -0.000000f },	{ 0.801653f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.980805f, 0.491817f, -0.000000f },	{ 0.793388f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.889804f, 0.465641f, -0.000000f },	{ 0.206612f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.996852f, 0.465954f, -0.000000f },	{ 0.785124f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.021094f, 0.443187f, -0.000000f },	{ 0.776860f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.905852f, 0.428380f, -0.000000f },	{ 0.214876f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.051482f, 0.422296f, -0.000000f },	{ 0.768595f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.930094f, 0.396187f, -0.000000f },	{ 0.223140f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.085967f, 0.402058f, -0.000000f },	{ 0.760331f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.122500f, 0.381250f, -0.000000f },	{ 0.752066f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.960482f, 0.368037f, -0.000000f },	{ 0.231405f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.159034f, 0.358650f, -0.000000f },	{ 0.743802f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.994967f, 0.342900f, -0.000000f },	{ 0.239669f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.193519f, 0.333037f, -0.000000f },	{ 0.735537f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.031500f, 0.319750f, -0.000000f },	{ 0.247934f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.223907f, 0.303187f, -0.000000f },	{ 0.727273f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.068034f, 0.297558f, -0.000000f },	{ 0.256198f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.248148f, 0.267880f, -0.000000f },	{ 0.719008f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.102519f, 0.275296f, -0.000000f },	{ 0.264463f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.132906f, 0.251937f, -0.000000f },	{ 0.272727f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.264196f, 0.225891f, -0.000000f },	{ 0.710744f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.157148f, 0.226454f, -0.000000f },	{ 0.280992f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.173196f, 0.197817f, -0.000000f },	{ 0.289256f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.270000f, 0.176000f, -0.000000f },	{ 0.702479f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.179000f, 0.165000f, -0.000000f },	{ 0.297521f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.888000f, 0.054000f, -0.000000f },	{ 0.504132f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.888000f, 0.178000f, -0.000000f },	{ 0.495868f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.900766f, 0.162608f, -0.000000f },	{ 0.487603f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.268343f, 0.149883f, -0.000000f },	{ 0.694215f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.178267f, 0.155325f, -0.000000f },	{ 0.305785f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.914042f, 0.148444f, -0.000000f },	{ 0.479339f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.176056f, 0.145435f, -0.000000f },	{ 0.314050f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.263491f, 0.125144f, -0.000000f },	{ 0.685950f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.927797f, 0.135531f, -0.000000f },	{ 0.471074f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.172344f, 0.135531f, -0.000000f },	{ 0.322314f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.942000f, 0.123889f, -0.000000f },	{ 0.462810f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.167111f, 0.125815f, -0.000000f },	{ 0.330579f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.160337f, 0.116487f, -0.000000f },	{ 0.338843f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.255625f, 0.101953f, -0.000000f },	{ 0.677686f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.956620f, 0.113538f, -0.000000f },	{ 0.454545f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.152000f, 0.107750f, -0.000000f },	{ 0.347107f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.971625f, 0.104500f, -0.000000f },	{ 0.446281f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.142080f, 0.099804f, -0.000000f },	{ 0.355372f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.986984f, 0.096795f, -0.000000f },	{ 0.438017f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.244926f, 0.080481f, -0.000000f },	{ 0.669421f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.130556f, 0.092852f, -0.000000f },	{ 0.363636f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.002667f, 0.090444f, -0.000000f },	{ 0.429752f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.117407f, 0.087094f, -0.000000f },	{ 0.371901f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.018641f, 0.085469f, -0.000000f },	{ 0.421488f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.102612f, 0.082731f, -0.000000f },	{ 0.380165f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.034875f, 0.081889f, -0.000000f },	{ 0.413223f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.086150f, 0.079966f, -0.000000f },	{ 0.388430f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.051339f, 0.079726f, -0.000000f },	{ 0.404959f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.231574f, 0.060899f, -0.000000f },	{ 0.661157f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.068000f, 0.079000f, -0.000000f },	{ 0.396694f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.215750f, 0.043375f, -0.000000f },	{ 0.652893f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.902319f, 0.043727f, -0.000000f },	{ 0.512397f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.916801f, 0.034403f, -0.000000f },	{ 0.520661f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.197634f, 0.028080f, -0.000000f },	{ 0.644628f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.931484f, 0.026016f, -0.000000f },	{ 0.528926f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.177408f, 0.015185f, -0.000000f },	{ 0.636364f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.946408f, 0.018556f, -0.000000f },	{ 0.537190f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.961608f, 0.012012f, -0.000000f },	{ 0.545455f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.155250f, 0.004859f, -0.000000f },	{ 0.628099f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.977125f, 0.006375f, -0.000000f },	{ 0.553719f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.992996f, 0.001634f, -0.000000f },	{ 0.561983f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.131343f, -0.002727f, -0.000000f },	{ 0.619835f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.009259f, -0.002222f, -0.000000f },	{ 0.570248f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.025953f, -0.005203f, -0.000000f },	{ 0.578512f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.105866f, -0.007403f, -0.000000f },	{ 0.611570f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.043116f, -0.007319f, -0.000000f },	{ 0.586777f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.060786f, -0.008582f, -0.000000f },	{ 0.595041f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -2.079000f, -0.009000f, -0.000000f },	{ 0.603306f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.419000f, 0.000000f, -0.000000f },	{ 0.181818f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.419000f, 0.682000f, -0.000000f },	{ 0.090909f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.517000f, 0.594000f, -0.000000f },	{ 0.909091f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.806000f, 0.682000f, -0.000000f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.806000f, 0.594000f, -0.000000f },	{ 1.000000f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.517000f, 0.388000f, -0.000000f },	{ 0.818182f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.517000f, 0.300000f, -0.000000f },	{ 0.545455f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.796000f, 0.388000f, -0.000000f },	{ 0.727273f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.796000f, 0.300000f, -0.000000f },	{ 0.636364f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.517000f, 0.088000f, -0.000000f },	{ 0.454545f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.815000f, 0.088000f, -0.000000f },	{ 0.363636f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.815000f, 0.000000f, -0.000000f },	{ 0.272727f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.035000f, -0.006000f, -0.000000f },	{ 0.833333f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.740000f, 0.682000f, -0.000000f },	{ 0.666667f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.838000f, 0.682000f, -0.000000f },	{ 0.500000f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.043000f, 0.203000f, -0.000000f },	{ 0.333333f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.247000f, 0.682000f, -0.000000f },	{ 0.166667f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.344000f, 0.682000f, -0.000000f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.055000f, -0.006000f, -0.000000f },	{ 1.000000f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.566000f, 0.000000f, -0.000000f },	{ 0.666667f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.566000f, 0.682000f, -0.000000f },	{ 0.333333f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.664000f, 0.682000f, -0.000000f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.664000f, 0.000000f, -0.000000f },	{ 1.000000f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.074000f, 0.000000f, -0.000000f },	{ 0.400000f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.074000f, 0.682000f, -0.000000f },	{ 0.200000f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.172000f, 0.682000f, -0.000000f },	{ 0.000000f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.172000f, 0.088000f, -0.000000f },	{ 1.000000f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.480000f, 0.088000f, -0.000000f },	{ 0.800000f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.480000f, 0.000000f, -0.000000f },	{ 0.600000f, 1.000000f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
};
#define _Text_vertices_
#endif
#ifndef _Text_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int Text_indices[423] =
{
	 0, 1, 2,
	 0, 2, 3,
	 0, 3, 4,
	 5, 0, 4,
	 5, 4, 6,
	 5, 6, 7,
	 8, 5, 7,
	 8, 7, 9,
	 8, 9, 10,
	 11, 8, 10,
	 11, 10, 12,
	 11, 12, 13,
	 14, 11, 13,
	 14, 13, 15,
	 14, 15, 16,
	 17, 14, 16,
	 17, 16, 18,
	 17, 18, 19,
	 19, 18, 20,
	 20, 18, 21,
	 21, 18, 22,
	 22, 18, 23,
	 23, 18, 24,
	 24, 18, 25,
	 25, 18, 26,
	 26, 18, 27,
	 28, 17, 29,
	 29, 17, 30,
	 30, 17, 19,
	 31, 28, 32,
	 32, 28, 33,
	 33, 28, 29,
	 34, 31, 35,
	 35, 31, 32,
	 34, 35, 36,
	 34, 36, 37,
	 34, 37, 38,
	 34, 38, 39,
	 34, 39, 40,
	 41, 34, 40,
	 41, 40, 42,
	 41, 42, 43,
	 41, 43, 44,
	 45, 41, 44,
	 45, 44, 46,
	 45, 46, 47,
	 48, 45, 47,
	 48, 47, 49,
	 48, 49, 50,
	 51, 48, 50,
	 51, 50, 52,
	 51, 52, 53,
	 54, 51, 53,
	 54, 53, 55,
	 56, 54, 55,
	 56, 55, 57,
	 56, 57, 58,
	 59, 56, 58,
	 59, 58, 60,
	 61, 59, 60,
	 61, 60, 62,
	 63, 61, 62,
	 63, 62, 64,
	 65, 63, 64,
	 65, 64, 66,
	 67, 65, 66,
	 68, 67, 66,
	 68, 66, 69,
	 70, 68, 69,
	 71, 70, 69,
	 71, 69, 72,
	 73, 71, 72,
	 74, 75, 76,
	 73, 72, 77,
	 78, 73, 77,
	 74, 76, 79,
	 80, 78, 77,
	 80, 77, 81,
	 74, 79, 82,
	 83, 80, 81,
	 74, 82, 84,
	 85, 83, 81,
	 86, 85, 81,
	 86, 81, 87,
	 74, 84, 88,
	 89, 86, 87,
	 74, 88, 90,
	 91, 89, 87,
	 74, 90, 92,
	 91, 87, 93,
	 94, 91, 93,
	 74, 92, 95,
	 96, 94, 93,
	 74, 95, 97,
	 98, 96, 93,
	 74, 97, 99,
	 100, 98, 93,
	 74, 99, 101,
	 100, 93, 102,
	 103, 100, 102,
	 74, 101, 103,
	 74, 103, 102,
	 74, 102, 104,
	 105, 74, 104,
	 106, 105, 104,
	 106, 104, 107,
	 108, 106, 107,
	 108, 107, 109,
	 110, 108, 109,
	 111, 110, 109,
	 111, 109, 112,
	 113, 111, 112,
	 114, 113, 112,
	 114, 112, 115,
	 116, 114, 115,
	 117, 116, 115,
	 117, 115, 118,
	 119, 117, 118,
	 120, 119, 118,
	 120, 118, 121,
	 122, 123, 124,
	 124, 123, 125,
	 124, 125, 126,
	 122, 124, 127,
	 122, 127, 128,
	 128, 127, 129,
	 128, 129, 130,
	 122, 128, 131,
	 122, 131, 132,
	 122, 132, 133,
	 134, 135, 136,
	 134, 136, 137,
	 137, 138, 139,
	 137, 139, 140,
	 134, 137, 140,
	 141, 142, 143,
	 141, 143, 144,
	 145, 146, 147,
	 145, 147, 148,
	 145, 148, 149,
	 145, 149, 150,
};
#define _Text_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _Text_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL Text_materials[1] =
{
	{
		{{ 0.005465f, 0.000000f, 0.800907f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		250.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.450000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Material.018",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _Text_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _Text_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int Text_batches[1][2] =
{
	{ 423, 0 },
};
#define _Text_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _Text_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH Text_meshes[1] =
{
	{
		"default",
		423,
		0,
		0,
	},
};
#define _Text_meshes_
#endif
